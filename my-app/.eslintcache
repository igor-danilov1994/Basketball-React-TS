[{"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\index.tsx":"1","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\App.tsx":"3","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Login\\Login.tsx":"4","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Registration\\Registration.tsx":"5","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Header\\Header.tsx":"6","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Menu\\Menu.tsx":"7","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\Teams.tsx":"8","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Pagination\\Pagiation.tsx":"9","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\Players.tsx":"10","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersEmpty\\PlayersEmpty.tsx":"11","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\TopInnerElement\\TopInnerElement.tsx":"12","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\AddPlayer.tsx":"13","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\CardEmpty\\CardEmpty.tsx":"14","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\AddTeams\\AddTeams.tsx":"15","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsEmpty\\TeamsEmpty.tsx":"16","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCard\\TeamsCard.tsx":"17","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayerCard\\Players–°ard.tsx":"18","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamsCardDetails.tsx":"19","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\API\\api.ts":"20","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\Blocl_Buttons\\Blocl_Buttons.tsx":"21","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\AddImages\\AddImages.tsx":"22","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\authReducer.ts":"23","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\redux-store.ts":"24","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\playersReducer.ts":"25","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\teamsReducer.ts.ts":"26","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Main\\Main.tsx":"27","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\selectors.ts":"28","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersCardDetails\\PlayersCardDetails.tsx":"29","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\BreadCrumbs\\BreadCrumbs.tsx":"30","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\SelectComponent\\SelectComponent.tsx":"31","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\Calendar\\CalendarComponent.tsx":"32","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamRoster.tsx":"33"},{"size":583,"mtime":1614850898221,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":888,"mtime":1615029637591,"results":"37","hashOfConfig":"35"},{"size":2960,"mtime":1615029637608,"results":"38","hashOfConfig":"35"},{"size":5046,"mtime":1615130496018,"results":"39","hashOfConfig":"35"},{"size":686,"mtime":1612538738310,"results":"40","hashOfConfig":"35"},{"size":2283,"mtime":1614674846220,"results":"41","hashOfConfig":"35"},{"size":3266,"mtime":1615193614492,"results":"42","hashOfConfig":"35"},{"size":2968,"mtime":1615194734022,"results":"43","hashOfConfig":"35"},{"size":3978,"mtime":1615194921003,"results":"44","hashOfConfig":"35"},{"size":331,"mtime":1613736409281,"results":"45","hashOfConfig":"35"},{"size":1103,"mtime":1613803666125,"results":"46","hashOfConfig":"35"},{"size":7147,"mtime":1615193955896,"results":"47","hashOfConfig":"35"},{"size":572,"mtime":1612160733666,"results":"48","hashOfConfig":"35"},{"size":3148,"mtime":1614928426485,"results":"49","hashOfConfig":"35"},{"size":331,"mtime":1613736436771,"results":"50","hashOfConfig":"35"},{"size":750,"mtime":1614689120465,"results":"51","hashOfConfig":"35"},{"size":1447,"mtime":1614765042587,"results":"52","hashOfConfig":"35"},{"size":3394,"mtime":1614765223366,"results":"53","hashOfConfig":"35"},{"size":4956,"mtime":1615192210141,"results":"54","hashOfConfig":"35"},{"size":459,"mtime":1612800607960,"results":"55","hashOfConfig":"35"},{"size":323,"mtime":1612800734175,"results":"56","hashOfConfig":"35"},{"size":2122,"mtime":1615192189494,"results":"57","hashOfConfig":"35"},{"size":407,"mtime":1614849114204,"results":"58","hashOfConfig":"35"},{"size":4174,"mtime":1615194470326,"results":"59","hashOfConfig":"35"},{"size":3839,"mtime":1615193610193,"results":"60","hashOfConfig":"35"},{"size":2264,"mtime":1614935818938,"results":"61","hashOfConfig":"35"},{"size":3312,"mtime":1614762673335,"results":"62","hashOfConfig":"35"},{"size":4512,"mtime":1614846158166,"results":"63","hashOfConfig":"35"},{"size":869,"mtime":1614674215531,"results":"64","hashOfConfig":"35"},{"size":914,"mtime":1614166064013,"results":"65","hashOfConfig":"35"},{"size":425,"mtime":1614253054304,"results":"66","hashOfConfig":"35"},{"size":4290,"mtime":1614694509351,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fkb8xw",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\index.tsx",["142"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\reportWebVitals.ts",[],["143","144"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\App.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Login\\Login.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Registration\\Registration.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Header\\Header.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Menu\\Menu.tsx",["145","146"],"import React, {useEffect, useState} from 'react'\r\nimport s from './menu.module.css'\r\nimport teamsShow from './images/menu_teamsShow.png'\r\nimport teamsHidden from './images/menu_teamsHidden.png'\r\nimport playersShow from './images/menu_playersShow.png'\r\nimport playersHidden from './images/menu_playersHidden.png'\r\nimport inputIcon from '../../assets/images/inputIcon.png'\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport total from '../../totalStyle.module.css'\r\nimport {signOut} from \"../../Redux/toolkit/authReducer\";\r\nimport {getPageSizeTeam, getPageTeam, getUserName} from \"../../Redux/toolkit/selectors\";\r\nimport {getTeams} from \"../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst Menu = (props: any) => {\r\n\r\n    const [active, setActive] = useState(false)\r\n\r\n    const toggleActive = () => {\r\n        setActive(!active)\r\n    }\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.nav_header}>\r\n\r\n                <div onClick={toggleActive} className={`${s.nav_item} ${s.menu_players}`}>\r\n                    <NavLink to='/main/teams'>\r\n                        <img src={active ? teamsShow : teamsHidden} alt=\"img\"/>\r\n                        <span className={total.text_extraSmall}>Teams</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.nav_item} ${s.menu_players}`}>\r\n                    <NavLink onClick={toggleActive} to='/main/players'>\r\n                        <img src={active ? playersHidden : playersShow} alt=\"img\"/>\r\n                        <span className={total.text_extraSmall}>Players</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={s.nav_footer}>\r\n                <NavLink to='/signIn' onClick={() => props.signOut()}>\r\n                    <img src={inputIcon} alt=\"iconImg\"/>\r\n                    <span className={total.text_extraSmall}>Sign out</span>\r\n                </NavLink>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    name: getUserName(state),\r\n    pageTeam: getPageTeam(state),\r\n    pageSizeTeam: getPageSizeTeam(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, signOut})(Menu);\r\n\r\n\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\Teams.tsx",["147"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Pagination\\Pagiation.tsx",["148"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\Players.tsx",["149"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersEmpty\\PlayersEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\TopInnerElement\\TopInnerElement.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\AddPlayer.tsx",["150"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\CardEmpty\\CardEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\AddTeams\\AddTeams.tsx",["151"],"import React, {useState} from 'react';\r\nimport f from \"../../../assets/FornControl/FormControl.module.css\";\r\nimport total from \"../../../totalStyle.module.css\";\r\nimport AddImages from \"../../../assets/FornControl/AddImages/AddImages\";\r\nimport Block_Buttons from \"../../../assets/FornControl/Blocl_Buttons/Blocl_Buttons\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setTeam, updateTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst AddTeams = (props: any) => {\r\n    //debugger\r\n    const onSubmit = (data: any) => {\r\n        data.foundationYear = Number(data.foundationYear)\r\n        let getCurrentTeamID = null\r\n\r\n        if (props.serialTeamID) {\r\n            getCurrentTeamID = props.teams[props.serialTeamID].id\r\n        }\r\n        props.setTeam(data, getCurrentTeamID)\r\n    }\r\n    const {register, handleSubmit} = useForm()\r\n    const [activeImgLoading, setActiveImgLoading] = useState(false)\r\n\r\n    let toggleShowImgLoading = () => {\r\n        setActiveImgLoading(!activeImgLoading)\r\n    }\r\n\r\n    return (\r\n        <div className={f.add}>\r\n            <div className={total.breadCrumbs}>\r\n                Main/Teams/{props.serialTeamID ? props.teamsName : 'NewTeam'}\r\n            </div>\r\n            <div className={f.add_form}>\r\n                <div className={f.add_form_img} onClick={toggleShowImgLoading}>\r\n                    <AddImages/>\r\n                    <input className={activeImgLoading ? `${f.active}` : \"\"}\r\n                           name='imageUrl' ref={register({ required: true })}\r\n                           accept=\"image/*\"\r\n                           type=\"file\"/>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Name</label>\r\n                            <input name='name' ref={register({ required: true })} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Division</label>\r\n                            <input name='division' ref={register({ required: true })} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Conference</label>\r\n                            <input name='conference' ref={register({ required: true })} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text} htmlFor=\"\">Year of foundation</label>\r\n                            <input name='foundationYear' ref={register({ required: true })} type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <Block_Buttons/>\r\n                </ form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    //teams: state.teams\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeam, updateTeam})(AddTeams);\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsEmpty\\TeamsEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCard\\TeamsCard.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayerCard\\Players–°ard.tsx",["152","153"],"import React, {useEffect, useState} from 'react'\r\nimport s from \"../../../assets/Style/CardLayout/CardLayout.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTeamsForId, getTeamsNames} from \"../../../Redux/toolkit/selectors\";\r\nimport {setTeamSerialId} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\nconst ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\nconst PlayerCard = (props: any) => {\r\n\r\n    const [nameTeam, setNameTeam] = useState('')\r\n\r\n    useEffect(() => {\r\n        //console.log(props.teamId)\r\n        props.setTeamSerialId(props.teamId)\r\n    }, [])\r\n\r\n\r\n    if (props.teamName.length > 0 && nameTeam === '') {\r\n        setNameTeam(props.teamName[0].name)\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardLayout}>\r\n            <div className={`${s.cardLayout_image} ${s.cardLayout_face}`}>\r\n                <img src={` ${ROOT_IMAGES}${props.player.avatarUrl}`} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.cardLayout_description}>\r\n                    <span>{props.player.name}\r\n                        <span>#{props.player.number}</span>\r\n                    </span>\r\n                {/*<span>{props.teamName[props.index]}</span> */}\r\n                <span>{nameTeam}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    teamName: getTeamsForId(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeamSerialId})(PlayerCard)\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamsCardDetails.tsx",["154","155"],"import React, {useEffect} from 'react';\r\nimport {getPlayersData, getSerialTeamID, getTeamsData} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport BreadCrumbs from '../../BreadCrumbs/BreadCrumbs';\r\nimport {getTeams, getTeam, deleteTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\nimport TeamRoster from './TeamRoster';\r\n\r\nconst TeamsCardDetails = (props: any) => {\r\n\r\n    let dataTeams = props.teams[props.serialTeamID]\r\n    debugger\r\n\r\n    let deleteTeam = () => {\r\n        props.deleteTeam(dataTeams.id)\r\n    }\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n\r\n    return (\r\n        <div className={s.cardDetails_teams}>\r\n            <div className={s.cardDetails_wrapper}>\r\n                <BreadCrumbs katigories={'Teams'}\r\n                             editPath={'addTeams'}\r\n                             pathAfterDeletion={'teams'}\r\n                             name={dataTeams.name}\r\n                             delete={deleteTeam}\r\n                />\r\n\r\n                <div className={s.cardDetails}>\r\n                    <div className={s.cardDetails_img}>\r\n                        <img src={`${ROOT_IMAGES}${dataTeams.imageUrl}`} alt=\"img\"/>\r\n                    </div>\r\n                    <div className={s.cardDetails_info}>\r\n                        <h1 className={total.text_big}>\r\n                            {dataTeams.name}\r\n                        </h1>\r\n                        <div className={s.cardDetails_description}>\r\n                            <div className={s.cardDetails_description_main}>\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Year of foundation</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.foundationYear}\r\n                            </span>\r\n                                </div>\r\n\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Division</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.division}\r\n                            </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={s.cardDetails_description_main}>\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Conference</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.conference}\r\n                            </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <TeamRoster teamId={dataTeams.id}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    //players: getPlayersData(state),\r\n    teams: getTeamsData(state),\r\n    serialTeamID: getSerialTeamID(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, getTeam, deleteTeam})(TeamsCardDetails)","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\API\\api.ts",["156","157","158"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\Blocl_Buttons\\Blocl_Buttons.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\AddImages\\AddImages.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\authReducer.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\redux-store.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\playersReducer.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\teamsReducer.ts.ts",["159"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Main\\Main.tsx",["160","161","162"],"import React, {useEffect} from 'react'\r\nimport '../../App.css'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Header from '../Header/Header';\r\nimport Menu from \"../Menu/Menu\";\r\nimport Teams from \"../Teams/Teams\";\r\nimport TeamsEmpty from '../Teams/TeamsEmpty/TeamsEmpty';\r\nimport TeamsCardDetails from \"../Teams/TeamsCardDetails/TeamsCardDetails\";\r\nimport Players from '../Players/Players';\r\nimport PlayersEmpty from \"../Players/PlayersEmpty/PlayersEmpty\";\r\nimport AddPlayer from '../Players/AddPlayer/AddPlayer';\r\nimport AddTeams from '../Teams/AddTeams/AddTeams';\r\nimport PlayersCardDetails from '../Players/PlayersCardDetails/PlayersCardDetails';\r\nimport {connect} from \"react-redux\";\r\nimport {getPosition} from \"../../Redux/toolkit/playersReducer\";\r\n\r\n\r\nconst Main = (props: any) => {\r\n    useEffect(() => {\r\n        props.getPosition()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"app-content\">\r\n                <Menu/>\r\n                <div className=\"main\">\r\n\r\n                    {props.teamsCount > 1 ? <Redirect to=\"/main/players\"/> : <Redirect to=\"/main/teams\"/>}\r\n\r\n                       {/* <Route path='' render={() => <Redirect to=\"/main/players\"/>}/>*/}\r\n\r\n\r\n                        <Route path='/main/teams' render={() => <Teams/>}/>\r\n                        <Route path='/main/teams_E' render={() => <TeamsEmpty/>}/>\r\n                        <Route path='/main/teamsCardDetails' render={() => < TeamsCardDetails/>}/>\r\n                        <Route path='/main/addTeams' render={() => < AddTeams/>}/>\r\n\r\n                        <Route  path='/main/players' render={() => <Players/>}/>\r\n                        <Route path='/main/players_E' render={() => <PlayersEmpty/>}/>\r\n                        <Route path='/main/playersCardDetails' render={() => < PlayersCardDetails/>}/>\r\n                        <Route path='/main/addPlayer' render={() => <AddPlayer/>}/>\r\n                        {/*<Route path='*' render={() => <div> page 404 NOT FOUND</div>}/>*/}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nlet mapStateToProps = (state: any) => ({\r\n    teamsCount: state.teams.count,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getPosition})(Main)\r\n\r\n\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\selectors.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersCardDetails\\PlayersCardDetails.tsx",["163"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    getPlayersData,\r\n    getSerialPlayerID,\r\n    getSerialTeamID,\r\n    getTeamsData,\r\n} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport BreadCrumbs from \"../../BreadCrumbs/BreadCrumbs\";\r\nimport {deletePlayer, getPlayer} from \"../../../Redux/toolkit/playersReducer\";\r\nimport {getTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst PlayersCardDetails = (props: any) => {\r\n    debugger\r\n    const [age, setAge] = useState<null | number>(null)\r\n\r\n    let dataPlayer = props.players[props.serialPlayerID]\r\n    let currentTeamName = props.team[props.serialPlayerID].name\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n\r\n    let deletePlayers = () => {\r\n        props.deletePlayer(dataPlayer.id)\r\n    }\r\n\r\n    const getAgePlayer = () => {\r\n        let currentBirthday: string = dataPlayer.birthday.slice(0, 4)\r\n        const currentYear = new Date().getFullYear()\r\n\r\n        const result = currentYear - (Number(currentBirthday))\r\n\r\n        setAge(result)\r\n        return result\r\n    }\r\n\r\n    if (dataPlayer.birthday && age === null) {\r\n\r\n        let age = getAgePlayer()\r\n\r\n        setAge(age)\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardDetails_wrapper}>\r\n\r\n            <BreadCrumbs katigories={'Players'} delete={deletePlayers}\r\n                         pathAfterDeletion={'players'} name={dataPlayer.name}\r\n                         editPath={'addPlayer'}\r\n            />\r\n\r\n            <div className={s.cardDetails}>\r\n                <div className={s.cardDetails_img}>\r\n                    <img src={`${ROOT_IMAGES}${dataPlayer.avatarUrl}`} alt=\"img\"/>\r\n                </div>\r\n                <div className={s.cardDetails_info}>\r\n                    <h1 className={total.text_big}>\r\n                        {dataPlayer.name}\r\n                        <span> #{dataPlayer.number}</span>\r\n                    </h1>\r\n                    <div className={s.cardDetails_description}>\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Position</h3>\r\n                                <span className={total.text_small}>\r\n                                {dataPlayer.position}\r\n                            </span>\r\n                            </div>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Team</h3>\r\n                                <span className={total.text_small}>\r\n                                {currentTeamName}\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Height</h3>\r\n                                <span className={total.text_small}>\r\n                                {dataPlayer.height} cm\r\n                            </span>\r\n                            </div>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Weight</h3>\r\n                                <span className={total.text_small}> {dataPlayer.weight} kg </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Age</h3>\r\n                                <span className={total.text_small}> {age} </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    //player: state.players.data,\r\n    players: getPlayersData(state),\r\n    //teams: getTeamsNames(state),\r\n    team: getTeamsData(state),\r\n    serialPlayerID: getSerialPlayerID(state),\r\n    serialTeamsID: getSerialTeamID(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeam, getPlayer, deletePlayer})(PlayersCardDetails)","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\BreadCrumbs\\BreadCrumbs.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\SelectComponent\\SelectComponent.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\Calendar\\CalendarComponent.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamRoster.tsx",["164","165","166","167","168"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    getPagePlayer,\r\n    getPageSizePlayer,\r\n    getPlayersCount,\r\n    getPlayersOfCurrentTeam,\r\n    getUserName\r\n} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {setPlayersRequest, getPlayers} from \"../../../Redux/toolkit/playersReducer\";\r\nimport {setTeamSerialId} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\nconst TeamRoster = (props: any) => {\r\n\r\n    const [page, setPage] = useState(props.pagePlayer)\r\n    const [count, setCount] = useState(props.count)\r\n\r\n    let result = props.count - 25\r\n\r\n    useEffect(() => {\r\n        props.getPlayers(props.name, 1, count)\r\n    }, [])\r\n\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n    const getAgePlayer = (birthday: string) => {\r\n        let currentBirthday: string = birthday.slice(0, 4)\r\n        const currentYear = new Date().getFullYear()\r\n\r\n        const result = currentYear - (Number(currentBirthday))\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardDetails_roster}>\r\n            <h1 className={total.text_small}>Roster</h1>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <td>#</td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Player</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Height</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Weight</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Age</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text__middle14}>Team</span>\r\n                    </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.playersOfCurrentTeam.map((player: any) =>\r\n                    <tr key={player.id}>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.number}</span>\r\n                        </td>\r\n                        <td>\r\n                            <img src={`${ROOT_IMAGES}${player.avatarUrl}`} alt=\"img\"/>\r\n                        </td>\r\n                        <td>\r\n                            <div className={s.cardDetails_roster_info}>\r\n                                <div className={s.cardDetails_roster_info_descr}>\r\n                                    <span className={total.text__middle14}>{player.name}</span>\r\n                                    <span className={total.text_extraSmall}>{player.position}</span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.height} cm</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.weight} kg</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.number}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{getAgePlayer(player.birthday)}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.team}</span>\r\n                        </td>\r\n\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    name: getUserName(state),\r\n    count: getPlayersCount(state),\r\n    pagePlayer: getPagePlayer(state),\r\n    pageSizePlayer: getPageSizePlayer(state),\r\n    playersOfCurrentTeam: getPlayersOfCurrentTeam(state),\r\n    //serialTeamsID: getSerialTeamID(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeamSerialId, setPlayersRequest, getPlayers})(TeamRoster)",{"ruleId":"169","severity":1,"message":"170","line":10,"column":5,"nodeType":"171","messageId":"172","endLine":10,"endColumn":10},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"178","line":8,"column":18,"nodeType":"171","messageId":"172","endLine":8,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":30,"column":8,"nodeType":"181","endLine":30,"endColumn":32,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":29,"column":8,"nodeType":"181","endLine":29,"endColumn":27,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"185","line":37,"column":8,"nodeType":"181","endLine":37,"endColumn":36,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":128,"column":21,"nodeType":"189","endLine":128,"endColumn":37},{"ruleId":"187","severity":1,"message":"188","line":61,"column":21,"nodeType":"189","endLine":61,"endColumn":37},{"ruleId":"169","severity":1,"message":"190","line":4,"column":24,"nodeType":"171","messageId":"172","endLine":4,"endColumn":37},{"ruleId":"179","severity":1,"message":"191","line":16,"column":8,"nodeType":"181","endLine":16,"endColumn":10,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"193","line":2,"column":9,"nodeType":"171","messageId":"172","endLine":2,"endColumn":23},{"ruleId":"169","severity":1,"message":"194","line":2,"column":9,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":17,"column":14,"nodeType":"171","messageId":"197","endLine":17,"endColumn":30},{"ruleId":"195","severity":1,"message":"198","line":51,"column":14,"nodeType":"171","messageId":"197","endLine":51,"endColumn":36},{"ruleId":"169","severity":1,"message":"199","line":26,"column":6,"nodeType":"171","messageId":"172","endLine":26,"endColumn":17},{"ruleId":"169","severity":1,"message":"200","line":3,"column":26,"nodeType":"171","messageId":"172","endLine":3,"endColumn":32},{"ruleId":"169","severity":1,"message":"201","line":17,"column":7,"nodeType":"171","messageId":"172","endLine":17,"endColumn":16},{"ruleId":"179","severity":1,"message":"191","line":24,"column":8,"nodeType":"181","endLine":24,"endColumn":10,"suggestions":"202"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"203","line":17,"column":12,"nodeType":"171","messageId":"172","endLine":17,"endColumn":16},{"ruleId":"169","severity":1,"message":"204","line":17,"column":18,"nodeType":"171","messageId":"172","endLine":17,"endColumn":25},{"ruleId":"169","severity":1,"message":"205","line":18,"column":19,"nodeType":"171","messageId":"172","endLine":18,"endColumn":27},{"ruleId":"169","severity":1,"message":"206","line":20,"column":9,"nodeType":"171","messageId":"172","endLine":20,"endColumn":15},{"ruleId":"179","severity":1,"message":"207","line":24,"column":8,"nodeType":"181","endLine":24,"endColumn":10,"suggestions":"208"},"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTeams' and 'name'. Either include them or remove the dependency array. If 'getTeams' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'setRequest'. Either include it or remove the dependency array. If 'setRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],"React Hook useEffect has missing dependencies: 'getPlayers' and 'name'. Either include them or remove the dependency array. If 'getPlayers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"react/jsx-pascal-case","Imported JSX component Block_Buttons must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'getTeamsNames' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["214"],"'getPlayersData' is defined but never used.","'fstat' is defined but never used.","@typescript-eslint/no-redeclare","'authAPI' is already defined.","redeclared","'playersAPI' is already defined.","'GetTeamType' is defined but never used.","'Switch' is defined but never used.","'PropsType' is assigned a value but never used.",["215"],"'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setCount' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [pageTeam, pageSizeTeam, getTeams, name]",{"range":"228","text":"229"},"Update the dependencies array to be: [currentPage, setRequest, size]",{"range":"230","text":"231"},"Update the dependencies array to be: [getPlayers, name, pagePlayer, pageSizePlayer]",{"range":"232","text":"233"},"Update the dependencies array to be: [props]",{"range":"234","text":"235"},{"range":"236","text":"235"},"Update the dependencies array to be: [count, props]",{"range":"237","text":"238"},[1229,1253],"[pageTeam, pageSizeTeam, getTeams, name]",[1003,1022],"[currentPage, setRequest, size]",[1576,1604],"[getPlayers, name, pagePlayer, pageSizePlayer]",[582,584],"[props]",[927,929],[809,811],"[count, props]"]