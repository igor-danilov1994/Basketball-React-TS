[{"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\index.tsx":"1","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\App.tsx":"3","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Login\\Login.tsx":"4","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Registration\\Registration.tsx":"5","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Header\\Header.tsx":"6","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Menu\\Menu.tsx":"7","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\Teams.tsx":"8","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Pagination\\Pagiation.tsx":"9","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\Players.tsx":"10","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersEmpty\\PlayersEmpty.tsx":"11","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\TopInnerElement\\TopInnerElement.tsx":"12","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\AddPlayer.tsx":"13","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\CardEmpty\\CardEmpty.tsx":"14","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\AddTeams\\AddTeams.tsx":"15","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsEmpty\\TeamsEmpty.tsx":"16","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCard\\TeamsCard.tsx":"17","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayerCard\\Players–°ard.tsx":"18","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamsCardDetails.tsx":"19","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\API\\api.ts":"20","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\Blocl_Buttons\\Blocl_Buttons.tsx":"21","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\AddImages\\AddImages.tsx":"22","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\authReducer.ts":"23","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\redux-store.ts":"24","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\playersReducer.ts":"25","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\teamsReducer.ts.ts":"26","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Main\\Main.tsx":"27","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\selectors.ts":"28","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersCardDetails\\PlayersCardDetails.tsx":"29","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\BreadCrumbs\\BreadCrumbs.tsx":"30","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\SelectComponent\\SelectComponent.tsx":"31","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\Calendar\\CalendarComponent.tsx":"32","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamRoster.tsx":"33"},{"size":563,"mtime":1612539429984,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":930,"mtime":1614778657102,"results":"37","hashOfConfig":"35"},{"size":2984,"mtime":1614782458000,"results":"38","hashOfConfig":"35"},{"size":4719,"mtime":1614783625131,"results":"39","hashOfConfig":"35"},{"size":686,"mtime":1612538738310,"results":"40","hashOfConfig":"35"},{"size":2283,"mtime":1614674846220,"results":"41","hashOfConfig":"35"},{"size":2898,"mtime":1614694161322,"results":"42","hashOfConfig":"35"},{"size":2734,"mtime":1614765414481,"results":"43","hashOfConfig":"35"},{"size":3707,"mtime":1614785355163,"results":"44","hashOfConfig":"35"},{"size":331,"mtime":1613736409281,"results":"45","hashOfConfig":"35"},{"size":1103,"mtime":1613803666125,"results":"46","hashOfConfig":"35"},{"size":7278,"mtime":1614768422830,"results":"47","hashOfConfig":"35"},{"size":572,"mtime":1612160733666,"results":"48","hashOfConfig":"35"},{"size":3048,"mtime":1614157642780,"results":"49","hashOfConfig":"35"},{"size":331,"mtime":1613736436771,"results":"50","hashOfConfig":"35"},{"size":750,"mtime":1614689120465,"results":"51","hashOfConfig":"35"},{"size":1447,"mtime":1614765042587,"results":"52","hashOfConfig":"35"},{"size":3394,"mtime":1614765223366,"results":"53","hashOfConfig":"35"},{"size":4291,"mtime":1614783625021,"results":"54","hashOfConfig":"35"},{"size":459,"mtime":1612800607960,"results":"55","hashOfConfig":"35"},{"size":323,"mtime":1612800734175,"results":"56","hashOfConfig":"35"},{"size":2236,"mtime":1614782593805,"results":"57","hashOfConfig":"35"},{"size":409,"mtime":1612532846596,"results":"58","hashOfConfig":"35"},{"size":4157,"mtime":1614701024164,"results":"59","hashOfConfig":"35"},{"size":3637,"mtime":1614754569774,"results":"60","hashOfConfig":"35"},{"size":2280,"mtime":1614778562266,"results":"61","hashOfConfig":"35"},{"size":3312,"mtime":1614762673335,"results":"62","hashOfConfig":"35"},{"size":4514,"mtime":1614765145902,"results":"63","hashOfConfig":"35"},{"size":869,"mtime":1614674215531,"results":"64","hashOfConfig":"35"},{"size":914,"mtime":1614166064013,"results":"65","hashOfConfig":"35"},{"size":425,"mtime":1614253054304,"results":"66","hashOfConfig":"35"},{"size":4290,"mtime":1614694509351,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1fkb8xw",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"71"},"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\index.tsx",["147"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/toolkit/redux-store\";\n\n\nlet state = store.getState()\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </ Provider>\n        </ BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n",["148","149"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\App.tsx",["150"],"import React from 'react'\nimport './App.css'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Registration from \"./Components/Registration/Registration\";\nimport LoginContainer from \"./Components/Login/Login\";\nimport {compose} from \"redux\";\nimport Main from './Components/Main/Main';\nimport {connect} from 'react-redux';\n\n\nfunction App(props: any) {\n    return (\n        <div className=\"app\">\n            <Route path='' render={() => <Redirect to=\"/signIn\"/>}/>\n            {\n                props.isAuth ? <Redirect to=\"/main/\"/>\n                : <Route exact path='/signIn' render={() => <LoginContainer/>}/>\n            }\n            <Route exact path='/signUp' render={() => <Registration/>}/>\n\n            <Route path='/main/' render={() => <Main/>}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(connect(mapStateToProps)(App))\n\n\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Login\\Login.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Registration\\Registration.tsx",["151"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Header\\Header.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Menu\\Menu.tsx",["152","153"],"import React, {useEffect, useState} from 'react'\r\nimport s from './menu.module.css'\r\nimport teamsShow from './images/menu_teamsShow.png'\r\nimport teamsHidden from './images/menu_teamsHidden.png'\r\nimport playersShow from './images/menu_playersShow.png'\r\nimport playersHidden from './images/menu_playersHidden.png'\r\nimport inputIcon from '../../assets/images/inputIcon.png'\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport total from '../../totalStyle.module.css'\r\nimport {signOut} from \"../../Redux/toolkit/authReducer\";\r\nimport {getPageSizeTeam, getPageTeam, getUserName} from \"../../Redux/toolkit/selectors\";\r\nimport {getTeams} from \"../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst Menu = (props: any) => {\r\n\r\n    const [active, setActive] = useState(false)\r\n\r\n    const toggleActive = () => {\r\n        setActive(!active)\r\n    }\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.nav_header}>\r\n\r\n                <div onClick={toggleActive} className={`${s.nav_item} ${s.menu_players}`}>\r\n                    <NavLink to='/main/teams'>\r\n                        <img src={active ? teamsShow : teamsHidden} alt=\"img\"/>\r\n                        <span className={total.text_extraSmall}>Teams</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.nav_item} ${s.menu_players}`}>\r\n                    <NavLink onClick={toggleActive} to='/main/players'>\r\n                        <img src={active ? playersHidden : playersShow} alt=\"img\"/>\r\n                        <span className={total.text_extraSmall}>Players</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={s.nav_footer}>\r\n                <NavLink to='/signIn' onClick={() => props.signOut()}>\r\n                    <img src={inputIcon} alt=\"iconImg\"/>\r\n                    <span className={total.text_extraSmall}>Sign out</span>\r\n                </NavLink>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    name: getUserName(state),\r\n    pageTeam: getPageTeam(state),\r\n    pageSizeTeam: getPageSizeTeam(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, signOut})(Menu);\r\n\r\n\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\Teams.tsx",["154"],"import React, {useEffect} from 'react'\r\nimport s from './Teams.module.css'\r\nimport TeamsCard from \"./TeamsCard/TeamsCard\";\r\nimport Pagination from \"../Pagination/Pagiation\";\r\nimport {getPageSizeTeam, getPageTeam, getTeamsCount, getTeamsData} from \"../../Redux/toolkit/selectors\";\r\nimport {getTeams} from \"../../Redux/toolkit/teamsReducer.ts\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {setTeamsRequest, setPageTeams, setTeamSerialId} from \"../../Redux/toolkit/teamsReducer.ts\";\r\nimport searchIcon from \"../../assets/images/search.png\";\r\nimport total from \"../../totalStyle.module.css\";\r\n\r\nconst Teams = (props: any) => {\r\n    //debugger\r\n\r\n    useEffect(() => {\r\n        //debugger\r\n        props.getTeams(props.name, props.pageTeam, props.pageSizeTeam)\r\n    }, [props.pageTeam, props.pageSizeTeam])\r\n\r\n    return (\r\n        <>\r\n            {props.teamsCount !== 0 ?\r\n                <div className={s.teams}>\r\n                    <div className={total.topElement}>\r\n\r\n                        <div className={total.topElement_search}>\r\n                            <input type=\"text\" placeholder='Search...'/>\r\n                            <img src={searchIcon} alt=\"search\"/>\r\n                        </div>\r\n\r\n                        <NavLink to='/main/addTeams'\r\n                                 className={`${total.btn} ${total.btn_add} ${total.topElement_btn}`}>\r\n                            <span>Add</span>\r\n                            <span>+</span>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n\r\n                    <div className={s.teams_card}>\r\n                        {props.teams.map((teams: any, index: number) =>\r\n                            <NavLink key={teams.id} to='/main/teamsCardDetails'\r\n                                     onClick={() => props.setTeamSerialId(index)}\r\n                            >\r\n\r\n                                <TeamsCard team={teams} key={index} index={index}/>\r\n\r\n                            </NavLink>\r\n                        )}\r\n                    </div>\r\n                    <div className={s.teamsPagination}>\r\n                        <Pagination\r\n                            page={props.pageTeam}\r\n                            pageSize={props.pageSizeTeam}\r\n                            pageCount={props.teamsCount}\r\n                            setRequest={props.setTeamsRequest}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                : <Redirect to=\"/main/teams_E\"/>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    state: state,\r\n    teams: getTeamsData(state),\r\n    pageTeam: getPageTeam(state),\r\n    teamsCount: getTeamsCount(state),\r\n    pageSizeTeam: getPageSizeTeam(state),\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, setTeamsRequest, setTeamSerialId, setPageTeams})(Teams)\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Pagination\\Pagiation.tsx",["155","156","157","158","159"],"import React, {useState, CSSProperties, useEffect} from 'react'\r\nimport s from './Pagination.module.css'\r\nimport showCountCard from '../../assets/images/link.png'\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getPagePlayer,\r\n    getPageSizePlayer,\r\n    getPlayersCount,\r\n    getUserName\r\n} from \"../../Redux/toolkit/selectors\";\r\nimport {getTeams} from \"../../Redux/toolkit/teamsReducer.ts\";\r\nimport {getPlayers, setPlayersRequest} from \"../../Redux/toolkit/playersReducer\";\r\n\r\nexport interface toggleCountCard {\r\n    [Key: string]: CSSProperties;\r\n}\r\n\r\nconst Pagination = (props: any) => {\r\n    //debugger\r\n    const [page, setPage] = useState(props.page)\r\n    const [size, setSize] = useState(props.pageSize)\r\n    const [select, setPageSelect] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.setRequest(page, size)\r\n    }, [page, size])\r\n\r\n\r\n    const styles: toggleCountCard = {\r\n        setCountCardShow: {\r\n            display: 'flex',\r\n        },\r\n        setCountCardHidden: {\r\n            display: 'none',\r\n        }\r\n    }\r\n\r\n    let handlePageClick = (e: any) => {\r\n        setPage(e.selected + 1)\r\n    }\r\n\r\n    let setCountCard = (e: any,) => {\r\n        setSize(e.currentTarget.value)\r\n        setPageSelect(!select)\r\n    }\r\n\r\n    //debugger\r\n    return (\r\n        <div className={s.pagination_wrapper}>\r\n            <ReactPaginate\r\n                previousLabel={''}\r\n                nextLabel={''}\r\n                breakLabel={'...'}\r\n                breakClassName={`${s.breakMe}`}\r\n                pageCount={props.pageCount / size}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={6}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={`${s.pagination}`}\r\n                //subContainerClassName={'pages pagination'}\r\n                activeClassName={`${s.active}`}\r\n            />\r\n\r\n            <div className={s.pagination_selectCountCard}>\r\n                <ul style={select ? styles.setCountCardShow : styles.setCountCardHidden}\r\n                    className={s.pagination_setCountCard}>\r\n                    <li onClick={setCountCard} value={6}>6</li>\r\n                    <li onClick={setCountCard} value={12}>12</li>\r\n                    <li onClick={setCountCard} value={24}>24</li>\r\n                </ul>\r\n                <div className={s.pagination_currentCard} onClick={() => setPageSelect(!select)}>\r\n                    <span>\r\n                        {size}\r\n                    </span>\r\n                    <img className={select ? `${s.pagination_currentCard_rotate}` : ''}\r\n                         src={showCountCard} alt=\"icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    name: getUserName(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, getPlayers})(Pagination)\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\Players.tsx",["160"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersEmpty\\PlayersEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\TopInnerElement\\TopInnerElement.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\AddPlayer.tsx",["161"],"import React, {useState} from 'react';\r\nimport f from \"../../../assets/FornControl/FormControl.module.css\";\r\nimport total from \"../../../totalStyle.module.css\";\r\nimport AddImages from \"../../../assets/FornControl/AddImages/AddImages\";\r\nimport Block_Buttons from \"../../../assets/FornControl/Blocl_Buttons/Blocl_Buttons\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowImg from '../../../assets/images/link.png'\r\nimport calendar from '../images/calendar.png'\r\nimport {savePlayers} from '../../../Redux/toolkit/playersReducer';\r\nimport {getPlayerName, getTeamsId, getTeamsNames} from '../../../Redux/toolkit/selectors';\r\nimport CalendarComponent from './Calendar/CalendarComponent';\r\n\r\n\r\nconst AddPlayer = (props: any) => {\r\n\r\n    const {register, handleSubmit} = useForm()\r\n    const [activeRotatePosition, setActiveRotatePosition] = useState(false)\r\n    const [activeRotateTeam, setActiveRotateTeam] = useState(false)\r\n    const [activeImgLoading, setActiveImgLoading] = useState(false)\r\n    const [showCalendar, setShowCalendar] = useState(false)\r\n    const [birthday, onChangeBirthday] = useState('');\r\n    const [birthdayData, onChangeBirthdayData] = useState('');\r\n\r\n    let getBirthday = (date: any) => {\r\n        let month = (date.getMonth() + 1)\r\n        let FullYear = (date.getFullYear())\r\n        let dayLast = date.getDate()\r\n        let birthday: string = `${dayLast}.${month}.${FullYear}`\r\n\r\n        onChangeBirthday(birthday)\r\n        onChangeBirthdayData(date)\r\n    }\r\n\r\n    const onSubmit = (data: any) => {\r\n        data.birthday = birthdayData\r\n        props.savePlayers(data)\r\n    }\r\n\r\n    let setBirthday = (e: any) => {\r\n        onChangeBirthday(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={f.add}>\r\n            <div className={total.breadCrumbs}>\r\n                Main/Players/NamePlayers\r\n            </div>\r\n            <div className={f.add_form}>\r\n                <div className={f.add_form_img} onClick={() => setActiveImgLoading(!activeImgLoading)}>\r\n                    <AddImages/>\r\n                    <input className={activeImgLoading ? `${f.active}` : \"\"}\r\n                           name='avatarUrl' ref={register}\r\n                           accept=\"image/*\"\r\n                           type=\"file\"/>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Name</label>\r\n                            <input name='name' ref={register} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Position</label>\r\n                            <div className={total.select}\r\n                                 onClick={() => setActiveRotatePosition(!activeRotatePosition)}>\r\n                                <img\r\n                                    className={activeRotatePosition ? `${total.select_imgRotateOn}` : `${total.select_imgRotateOff}`}\r\n                                    src={arrowImg} alt=\"arrow\"/>\r\n\r\n                                {/* <SelectComponent name=\"position\" ref={register}\r\n                                                 options={props.positions} isMulti={false}\r\n                                                 closeMenuOnSelect={true}\r\n                                />\r\n*/}\r\n                                <select name=\"position\" ref={register}>\r\n                                    {props.positions.map((p: any) =>\r\n                                        <option key={p} value={p}>{p}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Team</label>\r\n                            <div className={total.select} onClick={() => setActiveRotateTeam(!activeRotateTeam)}>\r\n                                <img\r\n                                    className={activeRotateTeam ? `${total.select_imgRotateOn}` : `${total.select_imgRotateOff}`}\r\n                                    src={arrowImg} alt=\"arrow\"/>\r\n                                <select name=\"team\" ref={register}>\r\n                                    {props.teamsName.map((names: any, id: number) =>\r\n                                        <option key={props.teamsId[id]}\r\n                                                value={props.teamsId[id]}>\r\n                                            {names}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className={f.properties}>\r\n                            <div className={f.properties_options}>\r\n                                <div className={`${f.properties_data} ${f.add_form_data}`}>\r\n                                    <label>Height (cm)</label>\r\n                                    <input name='height' ref={register} type=\"text\"/>\r\n                                </div>\r\n                                <div className={`${f.properties_data} ${f.add_form_data}`}>\r\n                                    <label>Weight (kg)</label>\r\n                                    <input name='weight' ref={register} type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={f.properties_options}>\r\n                                <div className={`${f.properties_data} ${f.add_form_data}`}>\r\n                                    <label>Birthday</label>\r\n                                    <div className={`${f.properties_data_calendar}`}>\r\n                                        <input placeholder='dd.mm.yy' value={birthday} onChange={setBirthday}\r\n                                               name='birthday' ref={register} type=\"text\"/>\r\n\r\n                                        <img onClick={() => setShowCalendar(!showCalendar)} src={calendar}\r\n                                             alt=\"calendar\"/>\r\n\r\n                                        {showCalendar && <CalendarComponent getBirthday={getBirthday}/>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`${f.properties_data} ${f.add_form_data}`}>\r\n                                    <label>Number</label>\r\n                                    <input name='number' ref={register} type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Block_Buttons/>\r\n                </ form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n        positions: state.players.positions,\r\n        teamsId: getTeamsId(state),\r\n        playersName: getPlayerName(state),\r\n        teamsName: getTeamsNames(state)\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, {savePlayers})(AddPlayer);","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\CardEmpty\\CardEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\AddTeams\\AddTeams.tsx",["162"],"import React, {useState} from 'react';\r\nimport f from \"../../../assets/FornControl/FormControl.module.css\";\r\nimport total from \"../../../totalStyle.module.css\";\r\nimport AddImages from \"../../../assets/FornControl/AddImages/AddImages\";\r\nimport Block_Buttons from \"../../../assets/FornControl/Blocl_Buttons/Blocl_Buttons\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setTeam, updateTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst AddTeams = (props: any) => {\r\n    //debugger\r\n    const onSubmit = (data: any) => {\r\n        data.foundationYear = Number(data.foundationYear)\r\n        let getCurrentTeamID = null\r\n\r\n        if (props.serialTeamID) {\r\n            getCurrentTeamID = props.teams[props.serialTeamID].id\r\n        }\r\n        props.setTeam(data, getCurrentTeamID)\r\n    }\r\n    const {register, handleSubmit} = useForm()\r\n    const [activeImgLoading, setActiveImgLoading] = useState(false)\r\n\r\n    let toggleShowImgLoading = () => {\r\n        setActiveImgLoading(!activeImgLoading)\r\n    }\r\n\r\n    return (\r\n        <div className={f.add}>\r\n            <div className={total.breadCrumbs}>\r\n                Main/Teams/{props.serialTeamID ? props.teamsName : 'NewTeam'}\r\n            </div>\r\n            <div className={f.add_form}>\r\n                <div className={f.add_form_img} onClick={toggleShowImgLoading}>\r\n                    <AddImages/>\r\n                    <input className={activeImgLoading ? `${f.active}` : \"\"}\r\n                           name='imageUrl' ref={register}\r\n                           accept=\"image/*\"\r\n                           type=\"file\"/>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Name</label>\r\n                            <input name='name' ref={register} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Division</label>\r\n                            <input name='division' ref={register} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text}>Conference</label>\r\n                            <input name='conference' ref={register} type=\"text\"/>\r\n                        </div>\r\n                        <div className={f.add_form_data}>\r\n                            <label className={total.text} htmlFor=\"\">Year of foundation</label>\r\n                            <input name='foundationYear' ref={register} type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <Block_Buttons/>\r\n                </ form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    //teams: state.teams\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeam, updateTeam})(AddTeams);\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsEmpty\\TeamsEmpty.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCard\\TeamsCard.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayerCard\\Players–°ard.tsx",["163","164"],"import React, {useEffect, useState} from 'react'\r\nimport s from \"../../../assets/Style/CardLayout/CardLayout.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTeamsForId, getTeamsNames} from \"../../../Redux/toolkit/selectors\";\r\nimport {setTeamSerialId} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\nconst ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\nconst PlayerCard = (props: any) => {\r\n\r\n    const [nameTeam, setNameTeam] = useState('')\r\n\r\n    useEffect(() => {\r\n        //console.log(props.teamId)\r\n        props.setTeamSerialId(props.teamId)\r\n    }, [])\r\n\r\n\r\n    if (props.teamName.length > 0 && nameTeam === '') {\r\n        setNameTeam(props.teamName[0].name)\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardLayout}>\r\n            <div className={`${s.cardLayout_image} ${s.cardLayout_face}`}>\r\n                <img src={` ${ROOT_IMAGES}${props.player.avatarUrl}`} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.cardLayout_description}>\r\n                    <span>{props.player.name}\r\n                        <span>#{props.player.number}</span>\r\n                    </span>\r\n                {/*<span>{props.teamName[props.index]}</span> */}\r\n                <span>{nameTeam}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    teamName: getTeamsForId(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeamSerialId})(PlayerCard)\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamsCardDetails.tsx",["165","166"],"import React, {useEffect} from 'react';\r\nimport {getPlayersData, getSerialTeamID, getTeamsData} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport BreadCrumbs from '../../BreadCrumbs/BreadCrumbs';\r\nimport {getTeams, getTeam, deleteTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\nimport TeamRoster from './TeamRoster';\r\n\r\nconst TeamsCardDetails = (props: any) => {\r\n\r\n    let dataTeams = props.teams[props.serialTeamID]\r\n    debugger\r\n\r\n    let deleteTeam = () => {\r\n        props.deleteTeam(dataTeams.id)\r\n    }\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n\r\n    return (\r\n        <div className={s.cardDetails_teams}>\r\n            <div className={s.cardDetails_wrapper}>\r\n                <BreadCrumbs katigories={'Teams'}\r\n                             editPath={'addTeams'}\r\n                             pathAfterDeletion={'teams'}\r\n                             name={dataTeams.name}\r\n                             delete={deleteTeam}\r\n                />\r\n\r\n                <div className={s.cardDetails}>\r\n                    <div className={s.cardDetails_img}>\r\n                        <img src={`${ROOT_IMAGES}${dataTeams.imageUrl}`} alt=\"img\"/>\r\n                    </div>\r\n                    <div className={s.cardDetails_info}>\r\n                        <h1 className={total.text_big}>\r\n                            {dataTeams.name}\r\n                        </h1>\r\n                        <div className={s.cardDetails_description}>\r\n                            <div className={s.cardDetails_description_main}>\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Year of foundation</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.foundationYear}\r\n                            </span>\r\n                                </div>\r\n\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Division</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.division}\r\n                            </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={s.cardDetails_description_main}>\r\n                                <div className={s.cardDetails_skill}>\r\n                                    <h3 className={total.text_middle}>Conference</h3>\r\n                                    <span className={total.text_small}>\r\n                                {dataTeams.conference}\r\n                            </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <TeamRoster teamId={dataTeams.id}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    //players: getPlayersData(state),\r\n    teams: getTeamsData(state),\r\n    serialTeamID: getSerialTeamID(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeams, getTeam, deleteTeam})(TeamsCardDetails)","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\API\\api.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\Blocl_Buttons\\Blocl_Buttons.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\assets\\FornControl\\AddImages\\AddImages.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\authReducer.ts",["167"],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\redux-store.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\playersReducer.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\teamsReducer.ts.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Main\\Main.tsx",["168"],"import React, {useEffect} from 'react'\r\nimport '../../App.css'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Header from '../Header/Header';\r\nimport Menu from \"../Menu/Menu\";\r\nimport Teams from \"../Teams/Teams\";\r\nimport TeamsEmpty from '../Teams/TeamsEmpty/TeamsEmpty';\r\nimport TeamsCardDetails from \"../Teams/TeamsCardDetails/TeamsCardDetails\";\r\nimport Players from '../Players/Players';\r\nimport PlayersEmpty from \"../Players/PlayersEmpty/PlayersEmpty\";\r\nimport AddPlayer from '../Players/AddPlayer/AddPlayer';\r\nimport AddTeams from '../Teams/AddTeams/AddTeams';\r\nimport PlayersCardDetails from '../Players/PlayersCardDetails/PlayersCardDetails';\r\nimport {connect} from \"react-redux\";\r\nimport {getPosition} from \"../../Redux/toolkit/playersReducer\";\r\n\r\nconst Main = (props: any) => {\r\n\r\n    useEffect(() => {\r\n        props.getPosition()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"app-content\">\r\n                <Menu/>\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        {props.teamsCount !== 0 && <Redirect to=\"/main/players\"/>}\r\n\r\n                        <Route path='' render={() => <Redirect to=\"/main/teams\"/>}/>\r\n\r\n                        <Route path='/main/teams' render={() => <Teams/>}/>\r\n                        <Route path='/main/teams_E' render={() => <TeamsEmpty/>}/>\r\n                        <Route path='/main/teamsCardDetails' render={() => < TeamsCardDetails/>}/>\r\n                        <Route path='/main/addTeams' render={() => < AddTeams/>}/>\r\n\r\n                        <Route path='/main/players_E' render={() => <PlayersEmpty/>}/>\r\n                        <Route path='/main/players' render={() => <Players/>}/>\r\n                        <Route path='/main/playersCardDetails' render={() => < PlayersCardDetails/>}/>\r\n                        <Route path='/main/addPlayer' render={() => <AddPlayer/>}/>\r\n                        <Route path='*' render={() => <div> page 404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nlet mapStateToProps = (state: any) => ({\r\n    teamsCount: state.teams.count,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getPosition})(Main)\r\n\r\n\r\n","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Redux\\toolkit\\selectors.ts",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\PlayersCardDetails\\PlayersCardDetails.tsx",["169"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    getPlayersData,\r\n    getSerialPlayerID,\r\n    getSerialTeamID,\r\n    getTeamsData,\r\n} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport BreadCrumbs from \"../../BreadCrumbs/BreadCrumbs\";\r\nimport {deletePlayer, getPlayer} from \"../../../Redux/toolkit/playersReducer\";\r\nimport {getTeam} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\n\r\nconst PlayersCardDetails = (props: any) => {\r\n    //debugger\r\n    const [age, setAge] = useState<null | number>(null)\r\n\r\n    let dataPlayer = props.players[props.serialPlayerID]\r\n    let currentTeamName = props.team[props.serialPlayerID].name\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n\r\n    let deletePlayers = () => {\r\n        props.deletePlayer(dataPlayer.id)\r\n    }\r\n\r\n    const getAgePlayer = () => {\r\n        let currentBirthday: string = dataPlayer.birthday.slice(0, 4)\r\n        const currentYear = new Date().getFullYear()\r\n\r\n        const result = currentYear - (Number(currentBirthday))\r\n\r\n        setAge(result)\r\n        return result\r\n    }\r\n\r\n    if (dataPlayer.birthday && age === null) {\r\n\r\n        let age = getAgePlayer()\r\n\r\n        setAge(age)\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardDetails_wrapper}>\r\n\r\n            <BreadCrumbs katigories={'Players'} delete={deletePlayers}\r\n                         pathAfterDeletion={'players'} name={dataPlayer.name}\r\n                         editPath={'addPlayer'}\r\n            />\r\n\r\n            <div className={s.cardDetails}>\r\n                <div className={s.cardDetails_img}>\r\n                    <img src={`${ROOT_IMAGES}${dataPlayer.avatarUrl}`} alt=\"img\"/>\r\n                </div>\r\n                <div className={s.cardDetails_info}>\r\n                    <h1 className={total.text_big}>\r\n                        {dataPlayer.name}\r\n                        <span> #{dataPlayer.number}</span>\r\n                    </h1>\r\n                    <div className={s.cardDetails_description}>\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Position</h3>\r\n                                <span className={total.text_small}>\r\n                                {dataPlayer.position}\r\n                            </span>\r\n                            </div>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Team</h3>\r\n                                <span className={total.text_small}>\r\n                                {currentTeamName}\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Height</h3>\r\n                                <span className={total.text_small}>\r\n                                {dataPlayer.height} cm\r\n                            </span>\r\n                            </div>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Weight</h3>\r\n                                <span className={total.text_small}> {dataPlayer.weight} kg </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={s.cardDetails_description_main}>\r\n                            <div className={s.cardDetails_skill}>\r\n                                <h3 className={total.text_middle}>Age</h3>\r\n                                <span className={total.text_small}> {age} </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    //player: state.players.data,\r\n    players: getPlayersData(state),\r\n    //teams: getTeamsNames(state),\r\n    team: getTeamsData(state),\r\n    serialPlayerID: getSerialPlayerID(state),\r\n    serialTeamsID: getSerialTeamID(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTeam, getPlayer, deletePlayer})(PlayersCardDetails)","C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\BreadCrumbs\\BreadCrumbs.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\SelectComponent\\SelectComponent.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Players\\AddPlayer\\Calendar\\CalendarComponent.tsx",[],"C:\\Users\\1\\Desktop\\Basketball-React-TS\\my-app\\src\\Components\\Teams\\TeamsCardDetails\\TeamRoster.tsx",["170","171","172","173","174"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    getPagePlayer,\r\n    getPageSizePlayer,\r\n    getPlayersCount,\r\n    getPlayersOfCurrentTeam,\r\n    getUserName\r\n} from '../../../Redux/toolkit/selectors';\r\nimport s from '../../../assets/Style/CardDetails/CardDetails.module.css'\r\nimport total from '../../../totalStyle.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {setPlayersRequest, getPlayers} from \"../../../Redux/toolkit/playersReducer\";\r\nimport {setTeamSerialId} from \"../../../Redux/toolkit/teamsReducer.ts\";\r\n\r\nconst TeamRoster = (props: any) => {\r\n\r\n    const [page, setPage] = useState(props.pagePlayer)\r\n    const [count, setCount] = useState(props.count)\r\n\r\n    let result = props.count - 25\r\n\r\n    useEffect(() => {\r\n        props.getPlayers(props.name, 1, count)\r\n    }, [])\r\n\r\n    let ROOT_IMAGES: string = 'http://dev.trainee.dex-it.ru'\r\n\r\n    const getAgePlayer = (birthday: string) => {\r\n        let currentBirthday: string = birthday.slice(0, 4)\r\n        const currentYear = new Date().getFullYear()\r\n\r\n        const result = currentYear - (Number(currentBirthday))\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardDetails_roster}>\r\n            <h1 className={total.text_small}>Roster</h1>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <td>#</td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Player</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Height</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Weight</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text_middle14}>Age</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className={total.text__middle14}>Team</span>\r\n                    </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.playersOfCurrentTeam.map((player: any) =>\r\n                    <tr key={player.id}>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.number}</span>\r\n                        </td>\r\n                        <td>\r\n                            <img src={`${ROOT_IMAGES}${player.avatarUrl}`} alt=\"img\"/>\r\n                        </td>\r\n                        <td>\r\n                            <div className={s.cardDetails_roster_info}>\r\n                                <div className={s.cardDetails_roster_info_descr}>\r\n                                    <span className={total.text__middle14}>{player.name}</span>\r\n                                    <span className={total.text_extraSmall}>{player.position}</span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.height} cm</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.weight} kg</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.number}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{getAgePlayer(player.birthday)}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span className={total.text_middle14}>{player.team}</span>\r\n                        </td>\r\n\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    name: getUserName(state),\r\n    count: getPlayersCount(state),\r\n    pagePlayer: getPagePlayer(state),\r\n    pageSizePlayer: getPageSizePlayer(state),\r\n    playersOfCurrentTeam: getPlayersOfCurrentTeam(state),\r\n    //serialTeamsID: getSerialTeamID(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setTeamSerialId, setPlayersRequest, getPlayers})(TeamRoster)",{"ruleId":"175","severity":1,"message":"176","line":10,"column":5,"nodeType":"177","messageId":"178","endLine":10,"endColumn":10},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"175","severity":1,"message":"183","line":3,"column":26,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"184","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"185","line":8,"column":18,"nodeType":"177","messageId":"178","endLine":8,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":19,"column":8,"nodeType":"188","endLine":19,"endColumn":44,"suggestions":"189"},{"ruleId":"175","severity":1,"message":"190","line":7,"column":5,"nodeType":"177","messageId":"178","endLine":7,"endColumn":18},{"ruleId":"175","severity":1,"message":"191","line":8,"column":5,"nodeType":"177","messageId":"178","endLine":8,"endColumn":22},{"ruleId":"175","severity":1,"message":"192","line":9,"column":5,"nodeType":"177","messageId":"178","endLine":9,"endColumn":20},{"ruleId":"175","severity":1,"message":"193","line":13,"column":21,"nodeType":"177","messageId":"178","endLine":13,"endColumn":38},{"ruleId":"186","severity":1,"message":"187","line":27,"column":8,"nodeType":"188","endLine":27,"endColumn":20,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"187","line":34,"column":8,"nodeType":"188","endLine":34,"endColumn":48,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":132,"column":21,"nodeType":"198","endLine":132,"endColumn":37},{"ruleId":"196","severity":1,"message":"197","line":61,"column":21,"nodeType":"198","endLine":61,"endColumn":37},{"ruleId":"175","severity":1,"message":"199","line":4,"column":24,"nodeType":"177","messageId":"178","endLine":4,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":16,"column":8,"nodeType":"188","endLine":16,"endColumn":10,"suggestions":"200"},{"ruleId":"175","severity":1,"message":"184","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"201","line":2,"column":9,"nodeType":"177","messageId":"178","endLine":2,"endColumn":23},{"ruleId":"175","severity":1,"message":"202","line":3,"column":9,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":21,"column":8,"nodeType":"188","endLine":21,"endColumn":10,"suggestions":"203"},{"ruleId":"175","severity":1,"message":"184","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"204","line":17,"column":12,"nodeType":"177","messageId":"178","endLine":17,"endColumn":16},{"ruleId":"175","severity":1,"message":"205","line":17,"column":18,"nodeType":"177","messageId":"178","endLine":17,"endColumn":25},{"ruleId":"175","severity":1,"message":"206","line":18,"column":19,"nodeType":"177","messageId":"178","endLine":18,"endColumn":27},{"ruleId":"175","severity":1,"message":"207","line":20,"column":9,"nodeType":"177","messageId":"178","endLine":20,"endColumn":15},{"ruleId":"186","severity":1,"message":"208","line":24,"column":8,"nodeType":"188","endLine":24,"endColumn":10,"suggestions":"209"},"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"'Switch' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["212"],"'getPagePlayer' is defined but never used.","'getPageSizePlayer' is defined but never used.","'getPlayersCount' is defined but never used.","'setPlayersRequest' is defined but never used.",["213"],["214"],"react/jsx-pascal-case","Imported JSX component Block_Buttons must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'getTeamsNames' is defined but never used.",["215"],"'getPlayersData' is defined but never used.","'isBoolean' is defined but never used.",["216"],"'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setCount' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["217"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [props.pageTeam, props.pageSizeTeam, props]",{"range":"229","text":"230"},"Update the dependencies array to be: [page, props, size]",{"range":"231","text":"232"},"Update the dependencies array to be: [props, props.pagePlayer, props.pageSizePlayer]",{"range":"233","text":"234"},"Update the dependencies array to be: [props]",{"range":"235","text":"236"},{"range":"237","text":"236"},"Update the dependencies array to be: [count, props]",{"range":"238","text":"239"},[819,855],"[props.pageTeam, props.pageSizeTeam, props]",[886,898],"[page, props, size]",[1243,1283],"[props, props.pagePlayer, props.pageSizePlayer]",[582,584],"[props]",[868,870],[809,811],"[count, props]"]